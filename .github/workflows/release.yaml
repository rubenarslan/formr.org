name: Release Workflow

on:
  release:
    types: [published]
env:
  REGISTRY: ghcr.io
  NAME: ${{ github.repository }}
  NAME_OPENCPU: timed-and-secured-assets/opencpu

jobs:
  build-formr:
    name: Build Formr
    runs-on: ubuntu-latest
    steps:
      - name: Setup Environment
        run: |
          echo "IMAGE_TAG=$REGISTRY/$NAME:${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAG }}

  build-opencpu:
    name: Build Open-CPU
    runs-on: ubuntu-latest
    steps:
      - name: Setup Environment
        run: |
          echo "IMAGE_TAG=$REGISTRY/$NAME_OPENCPU:${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./opencpu
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAG_OPENCPU }}